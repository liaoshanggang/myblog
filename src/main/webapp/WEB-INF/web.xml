<?xml version="1.0" encoding="UTF-8"?>
<!-- <!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 
	2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd" > -->

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>springmvc-zf</display-name>
	<!-- 全局上下文参数 這個參數名告訴上下文在哪 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- 加载applicationContext.xml配置文件 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 防止不良程序造成的内存溢出 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>


	<!-- 中文转码必须加到核心控制器前面 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- <filter>
		<filter-name>jspFilter</filter-name>
		<filter-class>com.blog.controller.JspFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>jspFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.woff</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.woff2</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.ttf</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>

	<!--核心控制器，将springMVC整合到项目里 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- 指定了SpringMVC配置文件的路径是：资源路径(如src目录)中的springmvc.xml文件。若不设置此<init-param>，则会根据SpringMVC的“默认约定”， 
				自动加载认加WEB-INF目录中的<servlet-name>-servlet.xml。 -->
			<param-value>classpath:springmvc-servlet.xml</param-value>
			<!-- 配置完contextConfigLocation后，SpringMVC就会随着服务（如Tomcat）的启动而自动初始化。 -->
		</init-param>
		<!-- 随着服务(如Tomcat)的启动而同时启动 -->
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- 告诉spring-mvc不要DispatcherServlet这个来处理，直接交给tomcat服务器来处理 -->
		<!-- 处理所有的请求，包括静态资源：*.html,*.js,*.css,*.jpg 静态资源没必要给控制器处理 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<!-- <error-page>
		<error-code>404</error-code>
		<location>/error/404.html</location>
	</error-page>

	<error-page>
		<error-code>500</error-code>
		<location>/error/500.html</location>
	</error-page> -->
</web-app>